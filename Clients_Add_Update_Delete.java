/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPackage;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author ALEX
 */

public class Clients_Add_Update_Delete extends javax.swing.JFrame {
    public DefaultTableModel m;
    DefaultListModel list = new DefaultListModel();
    public ArrayList<String> getData = new ArrayList<>();
    public ArrayList<String> getData1 = new ArrayList<>();
    /**
     * Creates new form Clients_Add_Update_Delete
     */
    public Clients_Add_Update_Delete() {
        initComponents();
        m = (DefaultTableModel) jTable2.getModel();
        this.setResizable(false);
        this.setTitle("CLIENTS");
//        this.setExtendedState(this.MAXIMIZED_BOTH);
        JTableHeader tableHeader = jTable2.getTableHeader();
        Font HeaderFont = new Font("Felix Titling", Font.BOLD, 14);
        tableHeader.setFont(HeaderFont);
        
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setWidth(0);
        
//        jTable2.getColumnModel().getColumn(1).setPreferredWidth(30);
//        jTable2.getColumnModel().getColumn(2).setPreferredWidth(30);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTable2.getColumnModel().getColumn(6).setPreferredWidth(70);
        jTable2.getColumnModel().getColumn(7).setPreferredWidth(45);
//        jTable2.getColumnModel().getColumn(7).setPreferredWidth(30);
//        jTable2.getColumnModel().getColumn(8).setPreferredWidth(10);
//        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        fillTable();
    }
    
    private void fillTable() {
        getData.clear();
        m.setRowCount(0);
        getData = DB_Connection.select(
        new String[] {"ClientID", "First_Name", "Last_Name", "DocumentID",
        "Phone", "Address", "City", "Country"}, "Clients");
        
        for (int i = 0; i < getData.size(); i++) {
            String[] arr = getData.get(i).split("_");
            m.addRow(new Object[] {
                arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]
            });
        }
        
        getData.clear();  
    }
    
    private void fillUpdateInfo() {
        
        resetInfo();
        int row = jTable2.getSelectedRow();
        
        firstname.setText(String.valueOf(m.getValueAt(row, 1)));
        lastname.setText(String.valueOf(m.getValueAt(row, 2)));
        docID.setText(String.valueOf(m.getValueAt(row, 3)));
        phone.setText(String.valueOf(m.getValueAt(row, 4)));
        address.setText(String.valueOf(m.getValueAt(row, 5)));
        city.setText(String.valueOf(m.getValueAt(row, 6)));
        country.setText(String.valueOf(m.getValueAt(row, 7)));
        
    }
    
    private void resetInfo() {
        getData.clear();
        
        firstname.setText("");
        lastname.setText("");
        docID.setText("");
        phone.setText("");
        address.setText("");
        city.setText("");
        country.setText("");
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopUpDelete = new javax.swing.JPopupMenu();
        deleteItem = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        country = new javax.swing.JTextField();
        firstname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lastname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        docID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        Add_Update = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        Add_Update1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Home = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        search = new javax.swing.JMenuItem();
        add_delete = new javax.swing.JMenuItem();
        update_delete = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        deleteItem.setText("Delete Client");
        deleteItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteItemMousePressed(evt);
            }
        });
        PopUpDelete.add(deleteItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(new java.awt.Font("Felix Titling", 0, 13)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client  ID", "First  Name", "Last  Name", "Document  ID", "Phone", "Address", "City", "Country"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel16.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel16.setText("Country");

        country.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        firstname.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel10.setText("Last Name");

        lastname.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 0));
        jLabel11.setText("Add/Update Client");

        jLabel12.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel12.setText("Document ID");

        docID.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel13.setText("Phone");

        phone.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel1.setText("First Name");

        jLabel14.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel14.setText("Address");

        address.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jLabel15.setText("City");

        city.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N

        Add_Update.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 18)); // NOI18N
        Add_Update.setText("Update");
        Add_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_UpdateActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jButton7.setText("Go Back");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton7MouseReleased(evt);
            }
        });

        Add_Update1.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 18)); // NOI18N
        Add_Update1.setText("Add");
        Add_Update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Update1ActionPerformed(evt);
            }
        });

        jMenuBar1.setFont(new java.awt.Font("Felix Titling", 0, 14)); // NOI18N

        Home.setForeground(new java.awt.Color(98, 98, 98));
        Home.setText("Main Menu");
        Home.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HomeMousePressed(evt);
            }
        });
        jMenuBar1.add(Home);

        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(98, 98, 98));
        jMenu1.setText("Reservations");
        jMenu1.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu1MouseExited(evt);
            }
        });

        search.setFont(new java.awt.Font("Felix Titling", 0, 12)); // NOI18N
        search.setForeground(new java.awt.Color(98, 98, 98));
        search.setText("Search");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchMousePressed(evt);
            }
        });
        jMenu1.add(search);

        add_delete.setFont(new java.awt.Font("Felix Titling", 0, 12)); // NOI18N
        add_delete.setForeground(new java.awt.Color(98, 98, 98));
        add_delete.setText("Add & DELETE");
        add_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add_deleteMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                add_deleteMousePressed(evt);
            }
        });
        add_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_deleteActionPerformed(evt);
            }
        });
        jMenu1.add(add_delete);

        update_delete.setFont(new java.awt.Font("Felix Titling", 0, 12)); // NOI18N
        update_delete.setForeground(new java.awt.Color(98, 98, 98));
        update_delete.setText("UPDATE & DELETE");
        update_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_deleteMouseExited(evt);
            }
        });
        update_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_deleteActionPerformed(evt);
            }
        });
        jMenu1.add(update_delete);

        jMenuBar1.add(jMenu1);

        jMenu3.setForeground(new java.awt.Color(98, 98, 98));
        jMenu3.setText("Rooms");
        jMenu3.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu3MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu5.setForeground(new java.awt.Color(98, 98, 98));
        jMenu5.setText("Services");
        jMenu5.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu5MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu4.setForeground(new java.awt.Color(98, 98, 98));
        jMenu4.setText("Discounts");
        jMenu4.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu4MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstname, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(lastname))
                                .addGap(90, 90, 90)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(docID, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(address)
                                    .addComponent(phone, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))))
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(country)
                            .addComponent(city, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 114, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(507, 507, 507))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Add_Update1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(335, 335, 335)
                        .addComponent(Add_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(215, 215, 215)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(docID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Update1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        setSize(new java.awt.Dimension(1264, 693));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteItemMousePressed
        // TODO add your handling code here:
        try {
            if(jTable2.getSelectedRow() == -1) {
                  resetInfo();
                  fillTable();
                JOptionPane.showMessageDialog(this, "You Need To Select an Existing Reservation", "Operation Failure", 0);
            }
            if(jTable2.getSelectedRow() != -1) {
                int result = JOptionPane.showConfirmDialog(this, "Do you wish to continue?\nThis process cannot be undone.", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
                if(result == 0){
                    deleteClient();
                    resetInfo();
                    fillTable();
                    JOptionPane.showMessageDialog(this, "Reservation Deleted Successfully", "Operation Success", 1);
                }
            }
        }
        catch (Exception e) {

        }
    }//GEN-LAST:event_deleteItemMousePressed

    private void Add_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_UpdateActionPerformed
        // TODO add your handling code here:
        if(firstname.getText().isBlank() || lastname.getText().isBlank() ||
           docID.getText().isBlank() || phone.getText().isBlank() ||
           city.getText().isBlank() || country.getText().isBlank()) {
           
           JOptionPane.showMessageDialog(this, "Blank Spots Encountered", "Operation Not Successful", 0);
        }
        else {
            int row = jTable2.getSelectedRow();
            
            String Firstname = firstname.getText();
            String Lastname = lastname.getText();
            String DocumentID = docID.getText();
            String Phone = phone.getText();
            String Address = address.getText();
            String City = city.getText();
            String Country = country.getText();
            
            getData.clear();

            getData = DB_Connection.selectWhere4(new String[] {"DocumentID"}, new String[]{"DocumentID"}, new String[] {DocumentID}, "Clients");
            String existingdocID = "";
            if(!getData.isEmpty()) {
                existingdocID = getData.get(0);
            }

            getData.clear();

            getData = DB_Connection.selectWhere4(new String[] {"Phone"}, new String[]{"Phone"}, new String[] {Phone}, "Clients");
            String existingPhone = "";
            if(!getData.isEmpty()) {
                existingPhone = getData.get(0);
            }

            getData.clear();
                if(DocumentID.equals(String.valueOf(m.getValueAt(row, 3))) && Phone.equals(String.valueOf(m.getValueAt(row, 4)))){
                    String clientID = String.valueOf(m.getValueAt(row, 0));

                    String[] columns1 = {"First_Name", "Last_name", "DocumentID", "Phone", "Address", "City", "Country"};
                    String[] values1 = {Firstname, Lastname, DocumentID, Phone, Address, City, Country};

                    String[] whereColumns1 = {"ClientID"};
                    String[] whereValues1 = {clientID};

                    DB_Connection.updateCombinedString(columns1, values1, whereColumns1, whereValues1, "Clients");

                    DB_Connection.insert2(columns1, values1, "Clients");

                    resetInfo();
                    fillTable();
                    JOptionPane.showMessageDialog(this, "Operation Completed Successfully");
                }
                else if(existingdocID.equals(DocumentID) && existingPhone.equals(Phone)) {
                    JOptionPane.showMessageDialog(this, "Repeating Client", "Constraint", 0);
                }
                else {
                    String clientID = String.valueOf(m.getValueAt(row, 0));

                    String[] columns1 = {"First_Name", "Last_name", "DocumentID", "Phone", "Address", "City", "Country"};
                    String[] values1 = {Firstname, Lastname, DocumentID, Phone, Address, City, Country};

                    String[] whereColumns1 = {"ClientID"};
                    String[] whereValues1 = {clientID};

                    DB_Connection.updateCombinedString(columns1, values1, whereColumns1, whereValues1, "Clients");

                    resetInfo();
                    fillTable();
                    JOptionPane.showMessageDialog(this, "Operation Completed Successfully");
                }
            }
    }//GEN-LAST:event_Add_UpdateActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        // TODO add your handling code here:
        try {
            int keyCode = evt.getKeyCode();
            if(keyCode == KeyEvent.VK_DELETE && jTable2.getSelectedRow() == -1) {
                resetInfo();
                fillTable();
                JOptionPane.showMessageDialog(this, "You Need To Select an Existing Reservation", "Operation Failure", 0);
            }

            else if(keyCode == KeyEvent.VK_DELETE && jTable2.getSelectedRow() != -1) {
                int result = JOptionPane.showConfirmDialog(this, "Do you wish to continue?\nThis process cannot be undone.", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
                if(result == 0){
                    deleteClient();
                    resetInfo();
                    fillTable();
                    JOptionPane.showMessageDialog(this, "Reservation Deleted Successfully", "Operation Success", 1);
                }
            }
        }
        catch (Exception e) {

        }
    }//GEN-LAST:event_jTable2KeyPressed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:
        try {
            fillUpdateInfo();
        }
        catch(Exception e) {
            System.out.println("Initial Click");
        }
    }//GEN-LAST:event_jTable2MouseReleased

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // TODO add your handling code here:
        if(SwingUtilities.isRightMouseButton(evt)) {
            PopUpDelete.show(evt.getComponent(), evt.getX(), evt.getY());
            int row = jTable2.rowAtPoint(evt.getPoint());
            jTable2.setRowSelectionInterval(row, row);
        }
    }//GEN-LAST:event_jTable2MousePressed

    private void HomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseEntered
        // TODO add your handling code here:
        Home.setForeground(new Color(172, 165, 31));

        jMenu1.setForeground(new Color(98, 98, 98));
        jMenu3.setForeground(new Color(98, 98, 98));
        jMenu4.setForeground(new Color(98, 98, 98));
        jMenu5.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_HomeMouseEntered

    private void HomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseExited
        // TODO add your handling code here:
        if(!Home.isSelected()) {
            Home.setForeground(new Color(98, 98, 98));
        }
    }//GEN-LAST:event_HomeMouseExited

    private void HomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMousePressed
        // TODO add your handling code here:
        Main_Menu Menu = new Main_Menu();
        this.dispose();
        Menu.setVisible(true);
    }//GEN-LAST:event_HomeMousePressed

    private void add_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_deleteMouseEntered
        // TODO add your handling code here:
        add_delete.setForeground(new Color(172, 165, 31));
    }//GEN-LAST:event_add_deleteMouseEntered

    private void add_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_deleteMouseExited
        // TODO add your handling code here:
        add_delete.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_add_deleteMouseExited

    private void add_deleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_deleteMousePressed
        // TODO add your handling code here:
        this.dispose();
        new Reservations_Add_Delete().setVisible(true);
    }//GEN-LAST:event_add_deleteMousePressed

    private void add_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_deleteActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Reservations_Add_Delete().setVisible(true);
    }//GEN-LAST:event_add_deleteActionPerformed

    private void searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseEntered
        // TODO add your handling code here:
        search.setForeground(new Color(172, 165, 31));
    }//GEN-LAST:event_searchMouseEntered

    private void searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseExited
        // TODO add your handling code here:
        search.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_searchMouseExited

    private void searchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMousePressed
        // TODO add your handling code here:
        Reservations_Search Search = new Reservations_Search();
        this.dispose();
        Search.setVisible(true);
    }//GEN-LAST:event_searchMousePressed

    private void update_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_deleteMouseEntered
        // TODO add your handling code here:
        update_delete.setForeground(new Color(172, 165, 31));
    }//GEN-LAST:event_update_deleteMouseEntered

    private void update_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_deleteMouseExited
        // TODO add your handling code here:
        update_delete.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_update_deleteMouseExited

    private void update_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_deleteActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Reservations_Update_Delete().setVisible(true);
    }//GEN-LAST:event_update_deleteActionPerformed

    private void jMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseEntered
        // TODO add your handling code here:
        jMenu1.setForeground(new Color(172, 165, 31));

        Home.setForeground(new Color(98, 98, 98));
        jMenu3.setForeground(new Color(98, 98, 98));
        jMenu4.setForeground(new Color(98, 98, 98));
        jMenu5.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_jMenu1MouseEntered

    private void jMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseExited
        // TODO add your handling code here:
        if(!jMenu1.isSelected()) {
            jMenu1.setForeground(new Color(98, 98, 98));
        }
    }//GEN-LAST:event_jMenu1MouseExited

    private void jMenu3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseEntered
        // TODO add your handling code here:
        jMenu3.setForeground(new Color(172, 165, 31));

        Home.setForeground(new Color(98, 98, 98));
        jMenu1.setForeground(new Color(98, 98, 98));
        jMenu4.setForeground(new Color(98, 98, 98));
        jMenu5.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_jMenu3MouseEntered

    private void jMenu3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseExited
        // TODO add your handling code here:
        if(!jMenu3.isSelected()) {
            jMenu3.setForeground(new Color(98, 98, 98));
        }
    }//GEN-LAST:event_jMenu3MouseExited

    private void jMenu3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MousePressed
        // TODO add your handling code here:
        this.dispose();
        new Rooms().setVisible(true);
    }//GEN-LAST:event_jMenu3MousePressed

    private void jMenu5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseEntered
        // TODO add your handling code here:
        jMenu5.setForeground(new Color(172, 165, 31));

        Home.setForeground(new Color(98, 98, 98));
        jMenu1.setForeground(new Color(98, 98, 98));
        jMenu3.setForeground(new Color(98, 98, 98));
        jMenu4.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_jMenu5MouseEntered

    private void jMenu5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseExited
        // TODO add your handling code here:
        if(!jMenu5.isSelected()) {
            jMenu5.setForeground(new Color(98, 98, 98));
        }
    }//GEN-LAST:event_jMenu5MouseExited

    private void jMenu5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MousePressed
        // TODO add your handling code here:
        this.dispose();
        new Services().setVisible(true);
    }//GEN-LAST:event_jMenu5MousePressed

    private void jMenu4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseEntered
        // TODO add your handling code here:
        jMenu4.setForeground(new Color(172, 165, 31));

        Home.setForeground(new Color(98, 98, 98));
        jMenu1.setForeground(new Color(98, 98, 98));
        jMenu3.setForeground(new Color(98, 98, 98));
        jMenu5.setForeground(new Color(98, 98, 98));
    }//GEN-LAST:event_jMenu4MouseEntered

    private void jMenu4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseExited
        // TODO add your handling code here:
        if(!jMenu4.isSelected()) {
            jMenu4.setForeground(new Color(98, 98, 98));
        }
    }//GEN-LAST:event_jMenu4MouseExited

    private void jMenu4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MousePressed
        // TODO add your handling code here:
        this.dispose();
        new Discounts().setVisible(true);
    }//GEN-LAST:event_jMenu4MousePressed

    private void jButton7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseReleased
        // TODO add your handling code here:
        Main_Menu Menu = new Main_Menu();
        this.dispose();
        Menu.setVisible(true);
    }//GEN-LAST:event_jButton7MouseReleased

    private void Add_Update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Update1ActionPerformed
        // TODO add your handling code here:
        if(firstname.getText().isBlank() || lastname.getText().isBlank() ||
           docID.getText().isBlank() || phone.getText().isBlank() ||
           city.getText().isBlank() || country.getText().isBlank()) {
           
           JOptionPane.showMessageDialog(this, "Blank Spots Encountered", "Operation Not Successful", 0);
        }
        else {
            int row = jTable2.getSelectedRow();
            
            String Firstname = firstname.getText();
            String Lastname = lastname.getText();
            String DocumentID = docID.getText();
            String Phone = phone.getText();
            String Address = address.getText();
            String City = city.getText();
            String Country = country.getText();
            
            getData.clear();

            getData = DB_Connection.selectWhere4(new String[] {"DocumentID"}, new String[]{"DocumentID"}, new String[] {DocumentID}, "Clients");
            String existingdocID = "";
            if(!getData.isEmpty()) {
                existingdocID = getData.get(0);
            }

            getData.clear();

            getData = DB_Connection.selectWhere4(new String[] {"Phone"}, new String[]{"Phone"}, new String[] {Phone}, "Clients");
            String existingPhone = "";
            if(!getData.isEmpty()) {
                existingPhone = getData.get(0);
            }

            getData.clear();
            if(existingdocID.equals(DocumentID) || existingPhone.equals(Phone)) {
                JOptionPane.showMessageDialog(this, "Repeating Client", "Constraint", 0);
            }
            else {
                String[] columns1 = {"First_Name", "Last_name", "DocumentID", "Phone", "Address", "City", "Country"};
                String[] values1 = {Firstname, Lastname, DocumentID, Phone, Address, City, Country};

                DB_Connection.insert2(columns1, values1, "Clients");

                resetInfo();
                fillTable();
                JOptionPane.showMessageDialog(this, "Operation Completed Successfully");
            }
        }
    }//GEN-LAST:event_Add_Update1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Do you wish to continue?", "Exit", JOptionPane.YES_NO_OPTION);
        if(result == 0){
            this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        }
        else {
            this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing
    
    private void deleteClient() {
        int row = jTable2.getSelectedRow();
        String clientID = String.valueOf(m.getValueAt(row, 0));

        //ResID
        getData.clear();

        //Select Reservations by ClientID
        String[] columns0 = {"Reservation_ID"};
        String[] whereColumns0 = {"ClientID"};
        String[] whereValues0 = {clientID};
        String table0 = "Reservations";
        getData = DB_Connection.selectWhere3(columns0, whereColumns0, whereValues0, table0);

        getData1.clear();

        for (int i = 0; i < getData.size(); i++) {
            String resID = getData.get(i);

            //Select Rooms by Reservations
            String[] columns1 = {"RoomID"};
            String[] whereColumns1 = {"Reservation_ID"};
            String[] whereValues1 = {resID};
            String table1 = "Rooms_Reservations";
            getData1 = DB_Connection.selectWhere3(columns1, whereColumns1, whereValues1, table1);

            //Delete Rooms By Reservations
            for (int j = 0; j < getData1.size(); j++) {
                String roomID = getData1.get(j);
                String[] whereColumns2 = {"Reservation_ID", "RoomID"};
                String[] whereValues2 = {resID, roomID};
                String table2 = "Rooms_Reservations";
                DB_Connection.delete(whereColumns2, whereValues2, table2);
            }

            getData1.clear();

            //Select Services By Reservations
            String[] columns3 = {"ServiceID"};
            String[] whereColumns3 = {"Reservation_ID"};
            String[] whereValues3 = {resID};
            String table3 = "Services_Reservations";
            getData1 = DB_Connection.selectWhere3(columns3, whereColumns3, whereValues3, table3);

            //Delete Services By Reservations
            for (int j = 0; j < getData1.size(); j++) {
                String serviceID = getData1.get(j);
                String[] whereColumns4 = {"Reservation_ID", "ServiceID"};
                String[] whereValues4 = {resID, serviceID};
                String table4 = "Services_Reservations";
                DB_Connection.delete(whereColumns4, whereValues4, table4);
            }

            String[] whereColumns5 = {"Reservation_ID", "ClientID"};
            String[] whereValues5 = {resID, clientID};
            String table5 = "Reservations";
            DB_Connection.delete(whereColumns5, whereValues5, table5);
            
        }
        
        String[] whereColumns6 = {"ClientID"};
        String[] whereValues6 = {clientID};
        String table6 = "Clients";
        DB_Connection.delete(whereColumns6, whereValues6, table6);

        getData.clear();
        getData1.clear();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clients_Add_Update_Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clients_Add_Update_Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clients_Add_Update_Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clients_Add_Update_Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clients_Add_Update_Delete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Update;
    private javax.swing.JButton Add_Update1;
    private javax.swing.JMenu Home;
    private javax.swing.JPopupMenu PopUpDelete;
    private javax.swing.JMenuItem add_delete;
    private javax.swing.JTextField address;
    private javax.swing.JTextField city;
    private javax.swing.JTextField country;
    private javax.swing.JMenuItem deleteItem;
    private javax.swing.JTextField docID;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField lastname;
    private javax.swing.JTextField phone;
    private javax.swing.JMenuItem search;
    private javax.swing.JMenuItem update_delete;
    // End of variables declaration//GEN-END:variables
}
